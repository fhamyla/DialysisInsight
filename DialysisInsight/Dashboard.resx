<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="resource.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="logout.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>