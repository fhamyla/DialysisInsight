<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="search.IconRight" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>