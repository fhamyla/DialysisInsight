<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="search.IconRight" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADukAAA7pAQ4zQhwAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAALP0lEQVR4Xu3dCawdVR3H8QEBsQqFAg0oBaGICCJWCQlLoAhIkGBsZHMBpMQ1IIqxgCKCEk1cKokE
        l+CKpCIYNLKICtbghigaFVEooHFDRAEXcK/fX++8vnPn/d/rvTP/c2bmzvySz817J+05Z8477765s5zJ
        1q5d23pkU2yNHbEQ86x/15vJLGwasjOOxOtxCb6Ke/Eg/gH9o6L/4i/4Hb6PK/B2nIgl2Nxqq2vMwroR
        /Safgk/h1wh/sF40cW7Gedgfm1h9mXRmYR3IYlyAnyP8QaWid4srcTQ6MxnMwlTIfLwStyD8YdTtfqzE
        Pla/J4lZGBt5As7BwwgHvomuw97WdkwCszAW8jicht8gHOSm0w7lJ7HI2q42MwtjIC/EHQgHtm0ew3ux
        tbWNbWQWeiIHoGl/46t6CCvQ+o+SZqEH8lRcg3DgJo0+or7c2v62MAurIkuhgzThYE2yD6GVHx3NwirI
        q/EvhAPUBV/HNtaYNJlZWAbZBDpMGw5K19yDvazxaSqzcFxkAW5COBhdpSOKx1jj1ERm4TjInliDcBC6
        TscNzrbGq2nMwlERHTd/BOHG96Z9Bo3+qGgWjoIcgf8g3ODeTPoovJE1hk1gFm4IeRr+jHBD6/I33AXt
        ha/CtbgdOqGjt2Lr/6R2kTWOTWAWzoXoDF4dp2x1/v56vBbPwx7Y0urjFKJPJrq2YD8sw8W4D8W6UzjR
        6mPdzMLZEJ3MuSHfoBT0LnM5jsWTrD6VQfbB+fgBim3G8ij2tfpTJ7NwNuT9+cbEpt90/ZZHP7pGFuFc
        pPiTprOgO1j9qItZaCGn5hsR02041Go/NqKLSnWmT2f8iv3y9F005pOBWVhEdEbvnwg3xJOOI5yA2veW
        yU7Quf+YO5CXW23XwSwMkR3wh7zj3vR38QxsarVdJ7I3Yp7GPstqNzWzMEQ+FnTak06lPtdqsymI7jf4
        KIp996CPr9tb7aZkFk4heyHGW+F3UPvGj4qciRgHvT5stZeSWTiF6KBK2GEPn8bjrfaajOjGFO+LWDWp
        9rDaS8UsFHJI3kkv/8MKq622IDr4dDeK21bFNVZbqdiF7I3je3kHvbzVaqttiC51eyDfJi8HWm2lYBdm
        2fFB5zxcYbXTVuQgeH4s/rbVTgozCwZ7vp7n92/FxN2ISZbn2+dlmdVObDMLBp/Lw45V0bhDn56I56Fx
        nWBLfmHp8DfsncPr79vf8Zyw/klDNobOWxS3vaxTrXZiGv4my14cdKaqVu/xj4psB6+rom6x2ohp+Jss
        +2LQmSp0lK8zCzAQrTFQHIOydrXaiGX6iyzbFl7X8yd/K6sTmQetRFIchzLOt9qIZfqLLDs96EQVP8HG
        YSNdQF6Vb39Vd1v1xzL9RZZ9I+hEFUeHDXQF0dVSd+ZjUFWynefBy2DBBo8DG6uLDXQJ0XWHxTEp481W
        /TEMXrLssKDxKo4rNtAlRIfQPRa/uMGqP4bBS5ZdFDRelt5Btig20DXk0nw8qtC1Akkukhm8ZNm38oar
        SDZrm4zotHFxbMo4yKrfm6KdF4+//6+xGugashk8Dgwl2Q9QdssbrELn+p9sNdBF5LP5uFRxmVW3N0U3
        eBYbH9etVuVdRV4SjE1ZSQ4LK2flDVZxgVV5V5GtgrEp6wGrbm/KR/IGqzjZqrzLiMedRtGXo1NuzBur
        4nCr8i4jPw3Gp6wlVt2eFN2qVGx4XHtalXcZ+UowPmUdbNXtSflZ3lgVW1mVdxnR7WXFcRrXC6y6PSlV
        1+N/1Kq468i7gjEq63irbk9K1YMWa6yKu454nF5fbtXtSal6y1NtlzQ3GfG4tP50q25Pyl/zxsq606q4
        64hWTC2O1bhOser2pFS9lOkRq+KuIxcGY1RW9AUnFY8Fn9zW75kU5LJgfMo6wKrbk+JxD+DuVuVdRjzu
        F4h+57DytbyxKpZalXcZ+VEwPmUttOr2pHwib6yKl1qVdxnxuMMqxSpp657eVWx4XOdYlXcV0UW2ukai
        OE7jSLJzrXhcyXqTVXlXkWOCsSnrdqtub4qWey82Pq5/Y2KepFUV8fgEcKlVtzdF17B5LID0MquBriG6
        Y9hjWb3oB4Fk8JJlPwwaLuuqYuVdRA4MxqSKJItHDV6y7ANBw2XpkHLrVv/yRt6Tj0cVei5hklVTBy+D
        p3qGHSjrqGIDXUN+EYxHWTdadccweBlcxOixIOTVxQa6hGjxqOKYlPEOq/4Ypr8YPGUj7ERZ+4UNdAnx
        uMNKki0bN/1Flr0t6EAVnbxDmLwoGIMqalsfQAsgVj16NaVTawQQz7UBzrPaiGX4G79FIjq1SgjxWh1E
        v4A7WW3EMvyN7+KHnVgniHiuD5T8kPrwN1m2JXRvetipsnQ0LOlsrgPRk8OL217WSVYbMc0syLJ3Bh2q
        SkcY5xXbmBTkdfl2etAzh5OP1cyCLNsCnqthX43GPjmzLKKnmukkWHF7y7rQaic2u9BvybgptWxcLGQx
        /pRvm4c/opbldezCwYrhng9G0N7tRCwgRbSfdAeK21jFmVZbKZiFQo4LOuhBi0e3+lwB0SHzm1Hctip+
        ic2s9lIwC6cQrfUfdrYqnW9ItgaeJ/J0eJzoKUq+5x8yC6eQg4OOetLzgFuzmDTRyl86RVvcjqp+jFoP
        mJmFIfKlvLPe9O7S+IWlyBsR45Fxoiez7Gi1m4pZGCLPgP5+hx338lscYbVbN7IAHvf4b0itk8AsLCLa
        IfQ6UWT5Mp5ltZ0a2RwrEOMtfza1TQKz0EI8bnaci3YQdZNKPQMxuJjzZPwKxb6lUMskMAstRAshfx5h
        p2PQA6Xfje2sfngj+sEfBY8LY6tKPgnMwtmQJ8LjnrdR6B1BT+9+E3az+lMW0Z07ug5SD8b2fghkVUkn
        gVk4F6Ln68d6nPxcdPRN6+7sjwVW32ZD9DS0XfAKfAGxdmq9JJsEZuGGEF377vnkzDIew734Jj4HXdp+
        NrT0/cehHUt9zn4Q1v9vOk2CRdb4ezILR0G8n5zZm+keRJ0EZuGoSKzn6vemRZ0EZuE4SKzDpL1p0SaB
        WTgusjtinCjpTYsyCczCMohOlXosPN2bnfskMAvLIro+3uNG097sXCeBWVgVOQ11f0ycZJoELldcm4Ue
        iI4VeKyZ32S6hP5cHIvUE17HQCpPArPQC9GfBL0beDxMsWmuxPqjdUSHlls3CcxCb0TH3vWb4vWc/Trp
        Xe3QWbazdZPALIyF6BH1F6ON+wcP4w2Yc+0+0qpJYBbGRnbFKsS8yMSLThNr5e+Rr9snrZkEZmEq5Nn4
        IHRjRLgxddPZQp1QKr3YBWnFJDALUyO6EUWLK2rHSmf5wo1KRe9GutbhDMy3+jku0vhJYBbWiWiH8XDo
        qiBdORzrZJPqvQ0rodU9trX6UxWpYxLch52t/hSZhU1C5kMnnHTmUY9m1+rmetDVqPsP+uShAyeaTNdC
        dz8/H8mecUAaOwnMwjYguspnIfTw6yU4BHoO8lI8E9sjyTP4R0EaOQnMwl4cpHGTwCzsxUMaNQlmFPTi
        I42ZBEPf9NIhjZgEQ53qpUXqmgTbrO9D2KFeeqSOSbBqffthZ3r1IHVMgmXr2i52plcPknoS3I8FZmd6
        9SCpJ8FJZkd69SEpJ8FKsxO9epFUk2C12YFe/UiKSfCQ2XivGUjsSbDGbLjXHCTmJLjKbLTXLCTWJHiL
        2WCveUiMSXCY2VivmYjnJLhuXZ3FRnrNRjwmge5xeMq6+ooN9JqPVJ0Ey9fXFVbcaw+im2/vyn+go9L9
        DkPPJhiqtNcuRJfQvw+jPPZ3NRbPqKNY0Gsfsi+0PN71+D1UqFvX9SjbS3ACNjL/r1XYazeilc5HeA7B
        2uz/IJOkWP/hmuEAAAAASUVORK5CYII=
</value>
  </data>
</root>